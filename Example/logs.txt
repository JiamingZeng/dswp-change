run original code
30
execution time was 2 ms.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
>>Skipping the edge, as it has been added already.
header:
exit:
num of blocks:5


>>Starting SCC computation
>>Adding [[  %t1 = icmp slt i32 %t0, 15]] to SCC #0
>>Adding [[  br i1 %t1, label %7, label %11]] to SCC #0
>>Adding [[  %t3 = load i32, ptr %5, align 4]] to SCC #0
>>Adding [[  %t4 = srem i32 %t3, 3]] to SCC #0
>>Adding [[  %t5 = icmp eq i32 %t4, 0]] to SCC #0
>>Adding [[  br i1 %t5, label %8, label %9]] to SCC #0
>>Adding [[  %t7 = load i32, ptr %5, align 4]] to SCC #0
>>Adding [[  %t13 = load i32, ptr %5, align 4]] to SCC #0
>>Adding [[  %t14 = add nsw i32 %t13, 1]] to SCC #0
>>Adding [[  store i32 %t14, ptr %5, align 4]] to SCC #0
>>Adding [[  %t0 = load i32, ptr %5, align 4]] to SCC #0
>>SCC edge from 0 to 1
>>Adding [[  br label %6, !llvm.loop !6]] to SCC #1
>>SCC edge from 0 to 2
>>Adding [[  br label %10]] to SCC #2
>>SCC edge from 0 to 3
>>Adding [[  br label %9]] to SCC #3
>>SCC edge from 0 to 4
>>Adding [[  store i32 %t9, ptr %2, align 4]] to SCC #4
>>Adding [[  %t8 = load i32, ptr %2, align 4]] to SCC #4
>>Adding [[  %t9 = add nsw i32 %t8, %t7]] to SCC #4
>>Successfully computed SCCs, with sccNum = 5

>>Latencies by SCC:
SCC #0: 30
SCC #1: 0
SCC #2: 0
SCC #3: 0
SCC #4: 5
latency info:35 17
part 0 size: 1
part 1 size: 4
live variable information
livein:   		
liveout:  
inserting sychronization

SYN: channel 0: t7 -> t9 [0]
SYN: channel 1: t13 -> t14 [0]
SYN: channel 2: t2 -> t12 [5]
SYN: channel 2: t2 -> t14 [5]
SYN: channel 2: t2 -> t16 [5]
SYN: channel 2: t6 -> t8 [5]
SYN: channel 2: t6 -> t9 [5]
SYN: channel 2: t6 -> t10 [5]
SYN: channel 2: t6 -> t11 [5]
begin to delete loop
run optimized code
execution time was 1 ms.
